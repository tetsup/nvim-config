name: Multi-platform Docker Build & Manifest Push

on:
  push:
    branches: [ master ]
  workflow_dispatch:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: linux/amd64
            name: amd64
            runner: ubuntu-latest
          - platform: linux/arm64
            name: arm64
            runner: ubuntu-24.04-arm
    runs-on: ${{ matrix.runner }}
    outputs:
      digest: ${{ steps.build.outputs.digest }}
      platform: ${{ matrix.platform }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push per platform
        id: build
        uses: docker/build-push-action@v6
        with:
          push: true
          context: .
          file: Dockerfile
          platforms: ${{ matrix.platform }}
          tags: ${{ vars.DOCKERHUB_NAMESPACE }}/${{ vars.IMAGE_NAME }}:${{ matrix.name }}-${{ github.sha }}
          provenance: false

      - name: Save digest
        run: |
          echo ${{ steps.build.outputs.digest }} > digest.txt

      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: platform-${{ matrix.name }}
          path: digest.txt

  manifest:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download all digests
        uses: actions/download-artifact@v4
        with:
          pattern: platform-*
          path: ./partials
          merge-multiple: false

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Create manifest
        run: |
          set -euo pipefail
          image="${{ vars.DOCKERHUB_NAMESPACE }}/${{ vars.IMAGE_NAME }}"
          tag="${{ github.sha }}"
          - name: Generate manifest args
          args=$(find ./partials -type f -name 'digest.txt' -exec awk -v img="$image" '{print img "@" $1}' {} + | tr '\n' ' ')
          echo ${args}
          docker manifest create ${image}:${tag} $args
          docker manifest create ${image}:latest $args
          docker manifest push ${image}:${tag}
          docker manifest push ${image}:latest
