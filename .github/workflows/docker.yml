name: Build and Push Docker Image

on:
  push:
    branches: [ master ]
  workflow_dispatch:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: linux/amd64
            runner: ubuntu-latest
          - platform: linux/arm64
            runner: ubuntu-24.04-arm
    runs-on: ${{ matrix.runner }}
    outputs:
      digest: ${{ steps.build.outputs.digest }}
      platform: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4

      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - uses: docker/setup-buildx-action@v3

      - name: Build and Push
        id: build
        uses: docker/build-push-action@v6
        with:
          push: true
          context: .
          file: Dockerfile
          platforms: ${{ matrix.platform }}
          tags: ${{ vars.DOCKERHUB_NAMESPACE }}/${{ vars.IMAGE_NAME }}:${{ github.sha }}

  manifest:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Collect digests and create manifest
        run: |
          set -euo pipefail
          image="${{ vars.DOCKERHUB_NAMESPACE }}/${{ vars.IMAGE_NAME }}"
          tag="${{ github.sha }}"
          digests=$(jq -r '.build[].outputs.digest' <<< '${{ toJson(needs) }}' | grep -v null)

          docker manifest create ${image}:${tag} $(
            echo "$digests" | xargs -I{} echo "${image}@{}"
          )
          docker manifest create ${image}:latest $(
            echo "$digests" | xargs -I{} echo "${image}@{}"
          )
          docker manifest push ${image}:${tag}
          docker manifest push ${image}:latest
