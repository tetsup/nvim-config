name: Multi-platform Docker Build & Manifest Push

on:
  push:
    branches: [ master ]
  workflow_dispatch:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: linux/amd64
            runner: ubuntu-latest
          - platform: linux/arm64
            runner: ubuntu-24.04-arm
    runs-on: ${{ matrix.runner }}
    outputs:
      digest: ${{ steps.build.outputs.digest }}
      platform: ${{ matrix.platform }}
    steps:
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - uses: docker/setup-buildx-action@v3

      - name: Build and push per platform
        id: build
        uses: docker/build-push-action@v6
        with:
          push: true
          context: .
          file: Dockerfile
          platforms: ${{ matrix.platform }}
          tags: ${{ vars.DOCKERHUB_NAMESPACE }}/${{ vars.IMAGE_NAME }}:${{ matrix.platform }}-${{ github.sha }}
          provenance: false

      - name: Save digest
        run: |
          echo "platform=${{ matrix.platform }}" > result.txt
          echo "digest=${{ steps.build.outputs.digest }}" >> result.txt

      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: digest-${{ matrix.platform }}
          path: result.txt

  collect:
    runs-on: ubuntu-latest
    needs: build
    outputs:
      all: ${{ steps.combine.outputs.all }}
    steps:
      - name: Download all digests
        uses: actions/download-artifact@v4
        with:
          path: ./partials

      - name: Combine digests into JSON
        id: combine
        run: |
          all=$(jq -sR '[split("\n\n")[] | select(length>0) | 
            (split("\n") | map(select(length>0)) | 
              map(split("=")) | from_entries)]' ./partials/**/result.txt)
          echo "$all" > all.json
          echo "all=$all" >> $GITHUB_OUTPUT
          echo "=== Combined digest list ==="
          cat all.json

  manifest:
    runs-on: ubuntu-latest
    needs: collect
    steps:
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Create manifest
        id: manifest
        run: |
          set -euo pipefail
          image="${{ vars.DOCKERHUB_NAMESPACE }}/${{ vars.IMAGE_NAME }}"
          tag="${{ github.sha }}"
          digests=$(echo '${{ needs.collect.outputs.all }}' | jq -r '.[] | "\(.digest)"')
          args=""
          for d in $digests; do
            args="$args ${image}@${d}"
          done
          docker manifest create ${image}:${tag} $args
          docker manifest create ${image}:latest $args
          docker manifest push ${image}:${tag}
          docker manifest push ${image}:latest
